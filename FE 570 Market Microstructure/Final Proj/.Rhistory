QQQ_data$VXX_direction_pred[i] <- 1
}
}
}
QQQ_data$port <- 100
QQQ_data$QQQ_port <- 100
###########################################################################################################################
### This modifies for how many days the model goes risk-off once the signal gets triggered, change 5 to your desired period
#############################################################################
counter = 0;
how_long = 10
for(i in 1:nrow(QQQ_data)){
if (i != nrow(QQQ_data)){
if(QQQ_data$VXX_direction_pred[i] == 1){
if (counter != how_long){
QQQ_data$VXX_direction_pred[i+1] <- 1
counter = counter + 1
} else {
counter = 0
QQQ_data$VXX_direction_pred[i+1] <- 0
}
}
}
}
how_long = 10
counter = 0;
# for (i in 2:nrow(QQQ_data)){
#  if(QQQ_data$VXX_direction_pred[i-1] == 1){
#   for (j in 1:nrow(vol_compression)){
#      if(as.Date(QQQ_data$Date[i]) == as.Date(vol_compression$date[j])){
#       counter = 0;
#       while (counter <= how_long && i < nrow(QQQ_data)){
#            QQQ_data$VXX_direction_pred[i] <- 0 # toggle whether you want risk off here
#            counter = counter + 1
#            i = i+1
#         }
#
#     }
#     }
#  }
# }
QQQ_data$port_ret <- QQQ_data$`Daily Return`
for(i in 1:nrow(QQQ_data)){
if(QQQ_data$VXX_direction_pred[i] == 1){
QQQ_data$port_ret[i] <- 0
}
}
for(i in 3:nrow(QQQ_data)){
QQQ_data$QQQ_port[i] <- QQQ_data$QQQ_port[i-1] * (1+QQQ_data$`Daily Return`[i-1])
QQQ_data$port[i] <- QQQ_data$port[i-1] * (1+QQQ_data$port_ret[i-1])
}
final_result <- cbind(QQQ_data$port,QQQ_data$QQQ_port, QQQ_data$VXX_direction_pred)
rownames(final_result) <- QQQ_data$Date
colnames(final_result) <- c("Portfolio Return", "QQQ Return", "Risk Signal")
final_result <- data.frame(final_result)
final_result$date <- as.Date(QQQ_data$Date)
final_result$Risk.Signal <- final_result$Risk.Signal * 300
####### Save for future use
ML_MA_Model <- QQQ_data
ML_MA_Model$Value <- final_result$Risk.Signal/300
ML_MA_Model$Label <- "ML MA Model"
ML_MA_Model <- ML_MA_Model[,c(1,3,4)]
####### Save for future use
sharpe_ratios <- data.frame(as.matrix(0,2,2))
sharpe_ratios$as.matrix.0..2..2.[1] <- (mean(QQQ_data$port_ret[-1]))/sd(QQQ_data$port_ret[-1])
sharpe_ratios$as.matrix.0..2..3.[1] <-(mean(QQQ_data$`Daily Return`[-1]))/sd(QQQ_data$`Daily Return`[-1])
colnames(sharpe_ratios) <- c("Portfolio Daily Sharpe", "QQQ Daily Sharpe")
sharpe_ratios_annualized <- sharpe_ratios *sqrt(252)
colnames(sharpe_ratios_annualized) <- c("Portfolio Sharpe Annualized", "QQQ Sharpe Annualized")
sharpe_ratios_annualized[1,]
library(ggplot2)
library(reshape2)
final_result <- melt(final_result, id = "date")
ggplot(final_result, aes(x = final_result$date, y = final_result$value, color = variable, group = final_result$variable))+geom_line()+ scale_x_date(date_minor_breaks = "1 day") + labs(color = "Portfolio") + xlab("Date") + ylab("Portfolio Value") + ggtitle("RandomForest Model - Technical Variables vs. Change in VXN 20-Day EMA")
model_1 <- Macro_score_model
model_2 <- TA_score_model
model_3 <- ML_MA_Model
model_4 <- ML_Model
cumulative <- ML_MA_Model
cumulative$Label <- "cumulative"
# Make sure no date discrepancy bettwen macro model and ta model dates
mylist <- c()
for (i in 1:nrow(model_1)){
if (sum(model_1$Date[i] == cumulative$Date) == 0){
mylist <- c(mylist, i)
}
}
model_1 <- model_1[-mylist,]
mylist <- c()
for (i in 1:nrow(cumulative)){
if (sum(cumulative$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
cumulative <- cumulative[-mylist,]
mylist <- c()
for (i in 1:nrow(model_2)){
if (sum(model_2$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_2 <- model_2[-mylist,]
mylist <- c()
for (i in 1:nrow(model_3)){
if (sum(model_3$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_3 <- model_3[-mylist,]
mylist <- c()
for (i in 1:nrow(model_4)){
if (sum(model_4$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_4 <- model_4[-mylist,]
nrow(model_1)
nrow(model_2)
nrow(model_3)
nrow(model_4)
nrow(cumulative)
# sum the various model scores
cumulative$Value <- model_1$Value + model_2$Value + model_3$Value + model_4$Value
# Re-pull QQQ and VXX Data if needed
tickers <- c("QQQ", "^VXN")
start.date2 = model_3$Date[1] # start and end dates from TA model
end.date2 = model_3$Date[nrow(model_3)]
# start.date2 = "2019-01-07"
# end.date2 = "2020-01-21"
#
# start.date2 = "2020-01-07"
# end.date2 = "2021-01-25"
#
# start.date2 = "2021-01-07"
# end.date2 = "2022-03-25"
l.out <- BatchGetSymbols(tickers = tickers,
first.date = start.date2,
last.date = as.Date(end.date2)+1, do.cache=FALSE, be.quiet = TRUE)
price_data = data.frame(l.out$df.tickers$price.adjusted,l.out$df.tickers$ret.adjusted.prices, l.out$df.tickers$ref.date, l.out$df.tickers$ticker)
colnames(price_data) <- c("Value", "Daily Return", "Date", "Label")
cumulative <- cumulative[(which(cumulative$Date == start.date2)):(which(cumulative$Date == end.date2)),]
# Build the portfolio
mylist <- c()
for (i in 1:nrow(price_data)){
if (sum(price_data$Date[i] == cumulative$Date) == 0){
mylist <- c(mylist, i)
}
}
price_data <- price_data[-mylist,]
portfolio <- cumulative
portfolio$Label <- "portfolio"
portfolio$Value <- 100
for(i in 2:nrow(portfolio)){
if (cumulative$Value[i-1] == 0){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+price_data$`Daily Return`[i]* 1.5)
} else if (cumulative$Value[i-1] == 1){
portfolio$Value[i] <- portfolio$Value[i-1]  * (1+(price_data$`Daily Return`[i] * 1))
} else if (cumulative$Value[i-1] == 2){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * 1))
} else if (cumulative$Value[i-1] == 3){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * .75))
} else if (cumulative$Value[i-1] == 4){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * -.5))
}
}
portfolio[nrow(portfolio),]
# Set up QQQ portfolio
QQQ_portfolio <- portfolio
QQQ_portfolio$Value <- 100
for(i in 2:nrow(QQQ_portfolio)){
QQQ_portfolio$Value[i] <- QQQ_portfolio$Value[i-1] * (1+price_data$`Daily Return`[i])
}
QQQ_portfolio$Label <- "QQQ Portfolio"
# Rebind everything
price_data <- price_data[,-2]
cumulative$Value <- cumulative$Value * 100 #* 10 + round(min(portfolio$Value),digits = 10)# use this to scale if using smaller time periods
cumulative$Label <- "Risk Signal"
port_comp <- rbind(QQQ_portfolio, portfolio , cumulative)
ggplot(port_comp, aes(x = port_comp$Date, y = port_comp$Value, color = port_comp$Label, group = port_comp$Label))+geom_line()+ggtitle("Cumulative Model - Market Exposure - 0 signals 150%, 4 signals -50%, else 100%") + theme(plot.title = element_text(size=10))
# Evaluate sharpe
sharpe_ratios <- data.frame(matrix(0,2,2))
sharpe_ratios$X1[1] <- mean(Delt(portfolio$Value)[-1])/sd(Delt(portfolio$Value)[-1])
sharpe_ratios$X2[1] <- mean(Delt(QQQ_portfolio$Value)[-1])/sd(Delt(QQQ_portfolio$Value)[-1])
colnames(sharpe_ratios) <- c("Portfolio Daily Sharpe", "QQQ Daily Sharpe")
sharpe_ratios_annualized <- sharpe_ratios *sqrt(252)
colnames(sharpe_ratios_annualized) <- c("Portfolio Sharpe Annualized", "QQQ Sharpe Annualized")
sharpe_ratios_annualized[1,]
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("FE570KO03012022.csv", header=T)
coke_raw <- read.csv("\FE570KO03012022.csv", header=T)
coke_raw <- read.csv(".\FE570KO03012022.csv", header=T)
coke_raw <- read.csv("..\FE570KO03012022.csv", header=T)
coke_raw <- read.csv("FE570KO03012022.csv", header=T)
coke_raw <- read.csv("FE570KO03012022.csv", header=T)
coke_raw <- read.csv("C:\Users\sidiy\Documents\GitHub\SIT-Courses\FE 570 Market Microstructure\Final Proj\FE570KO03012022.csv", header=T)
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:\Users\sidiy\Documents\GitHub\SIT-Courses\FE 570 Market Microstructure\Final Proj\FE570KO03012022.csv", header=T)
coke_raw <- read.csv("C:/Users\sidiy\Documents\GitHub\SIT-Courses\FE 570 Market Microstructure\Final Proj\FE570KO03012022.csv", header=T)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub\SIT-Courses\FE 570 Market Microstructure\Final Proj\FE570KO03012022.csv", header=T)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
class(coke_raw)
names(coke_raw)
summary(coke_raw)
length(coke_raw$Price) #864,733 entries (trades+quotes)
head(coke_raw)
tdata <- subset(coke_raw, Type=="Trade") #15,245 observations
qdata <- subset(coke_raw, Type=="Quote") #849,488 observations
View(tdata)
length(tdata$Price) #15,245 trades
length(qdata$Price) #849,488 quotes
tdata.small <- data.frame(TIME = gsub("T", " ", tdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
PRICE = tdata$Price,
SIZE = tdata$Volume,
EX = tdata$Ex.Cntrb.ID)
length(tdata.small$PRICE)
head(tdata.small,10)
qdata.small <- data.frame(TIME = gsub("T", " ", qdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
BID = qdata$Bid.Price,
BIDSIZ = qdata$Bid.Size,
OFR = qdata$Ask.Price,
OFRSIZ = qdata$Ask.Size)
head(qdata.small)
# remove the "T" from the Date.Time
longdate <- c('20222-03-01T00:00:00.018791658Z')
shortdate <- gsub("T", " ", longdate, perl=TRUE)
View(shortdate)
class(tdata.small) # is data.frame.
tdata.xts <- xts(tdata.small[,-1],
order.by=as.POSIXct(tdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
View(tdata.xts)
qdata.xts <- xts(qdata.small[,-1],
order.by=as.POSIXct(qdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
class(tdata.xts) # ok this is in xts format
head(tdata.xts) # usual TAQ format
head(qdata.xts)
mergeTradesSameTimestamp(tdata.xts)
length(tdata.xts$PRICE)
#matching trade and quote data
matchTradesQuotes(tdata.xts, qdata.xts, adjustment = 2)
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
tqdata <- tqdata[,-8]
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
tqdata <- na.omit(tqdata)
View(tqdata)
head(tqdata)
length(tqdata$EX)
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
class(coke_raw)
names(coke_raw)
summary(coke_raw)
length(coke_raw$Price) #864,733 entries (trades+quotes)
head(coke_raw)
tdata <- subset(coke_raw, Type=="Trade") #15,245 observations
qdata <- subset(coke_raw, Type=="Quote") #849,488 observations
View(tdata)
length(tdata$Price) #15,245 trades
length(qdata$Price) #849,488 quotes
tdata.small <- data.frame(TIME = gsub("T", " ", tdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
PRICE = tdata$Price,
SIZE = tdata$Volume,
EX = tdata$Ex.Cntrb.ID)
length(tdata.small$PRICE)
head(tdata.small,10)
# filter the quotes for each product
qdata.small <- data.frame(TIME = gsub("T", " ", qdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
BID = qdata$Bid.Price,
BIDSIZ = qdata$Bid.Size,
OFR = qdata$Ask.Price,
OFRSIZ = qdata$Ask.Size)
head(qdata.small)
# remove the "T" from the Date.Time
longdate <- c('20222-03-01T00:00:00.018791658Z')
shortdate <- gsub("T", " ", longdate, perl=TRUE)
View(shortdate)
class(tdata.small) # is data.frame.
# must put it in xts format, to act on it with aggregateTrades
tdata.xts <- xts(tdata.small[,-1],
order.by=as.POSIXct(tdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
View(tdata.xts)
qdata.xts <- xts(qdata.small[,-1],
order.by=as.POSIXct(qdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
class(tdata.xts) # ok this is in xts format
head(tdata.xts) # usual TAQ format
head(qdata.xts)
mergeTradesSameTimestamp(tdata.xts)
length(tdata.xts$PRICE)
#matching trade and quote data
matchTradesQuotes(tdata.xts, qdata.xts, adjustment = 2)
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
tqdata <- tqdata[,-8]
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
write.csv(tqdata, "tqdata1.csv", row.names = TRUE)
row.names(tqdata)
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
class(coke_raw)
names(coke_raw)
summary(coke_raw)
length(coke_raw$Price) #864,733 entries (trades+quotes)
head(coke_raw)
tdata <- subset(coke_raw, Type=="Trade") #15,245 observations
qdata <- subset(coke_raw, Type=="Quote") #849,488 observations
View(tdata)
length(tdata$Price) #15,245 trades
length(qdata$Price) #849,488 quotes
tdata.small <- data.frame(TIME = gsub("T", " ", tdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
PRICE = tdata$Price,
SIZE = tdata$Volume,
EX = tdata$Ex.Cntrb.ID)
length(tdata.small$PRICE)
head(tdata.small,10)
# filter the quotes for each product
qdata.small <- data.frame(TIME = gsub("T", " ", qdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
BID = qdata$Bid.Price,
BIDSIZ = qdata$Bid.Size,
OFR = qdata$Ask.Price,
OFRSIZ = qdata$Ask.Size)
head(qdata.small)
# remove the "T" from the Date.Time
longdate <- c('20222-03-01T00:00:00.018791658Z')
shortdate <- gsub("T", " ", longdate, perl=TRUE)
View(shortdate)
class(tdata.small) # is data.frame.
# must put it in xts format, to act on it with aggregateTrades
tdata.xts <- xts(tdata.small[,-1],
order.by=as.POSIXct(tdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
View(tdata.xts)
qdata.xts <- xts(qdata.small[,-1],
order.by=as.POSIXct(qdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
class(tdata.xts) # ok this is in xts format
head(tdata.xts) # usual TAQ format
head(qdata.xts)
mergeTradesSameTimestamp(tdata.xts)
length(tdata.xts$PRICE)
#matching trade and quote data
matchTradesQuotes(tdata.xts, qdata.xts, adjustment = 2)
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
tqdata <- tqdata[,-8]
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
View(tqdata)
row.names(tqdata)
View(tdata.xts)
tdata.xts
row.names(tdata.xts)
setwd("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj")
write.csv(tqdata, "tqdata1.csv")
tqdata[1]
tqdata[1, 1]
tqdata[, 1]
tqdata[,]
tqdata.index
colnames(tqdata)
length(tqdata)
length(tdata.xts)
length(qdata.xts)
View(tdata.xts)
View(qdata.xts)
View(qdata.xts)
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
class(coke_raw)
names(coke_raw)
summary(coke_raw)
length(coke_raw$Price) #864,733 entries (trades+quotes)
head(coke_raw)
tdata <- subset(coke_raw, Type=="Trade") #15,245 observations
qdata <- subset(coke_raw, Type=="Quote") #849,488 observations
View(tdata)
length(tdata$Price) #15,245 trades
length(qdata$Price) #849,488 quotes
tdata.small <- data.frame(TIME = gsub("T", " ", tdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
PRICE = tdata$Price,
SIZE = tdata$Volume,
EX = tdata$Ex.Cntrb.ID)
length(tdata.small$PRICE)
head(tdata.small,10)
# filter the quotes for each product
qdata.small <- data.frame(TIME = gsub("T", " ", qdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
BID = qdata$Bid.Price,
BIDSIZ = qdata$Bid.Size,
OFR = qdata$Ask.Price,
OFRSIZ = qdata$Ask.Size)
head(qdata.small)
# remove the "T" from the Date.Time
longdate <- c('20222-03-01T00:00:00.018791658Z')
shortdate <- gsub("T", " ", longdate, perl=TRUE)
View(shortdate)
class(tdata.small) # is data.frame.
# must put it in xts format, to act on it with aggregateTrades
tdata.xts <- xts(tdata.small[,-1],
order.by=as.POSIXct(tdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
View(tdata.xts)
qdata.xts <- xts(qdata.small[,-1],
order.by=as.POSIXct(qdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
class(tdata.xts) # ok this is in xts format
head(tdata.xts) # usual TAQ format
head(qdata.xts)
mergeTradesSameTimestamp(tdata.xts)
length(tdata.xts$PRICE)
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
length(tqdata)
row.names(tqdata)
tqdata_df = fortify.zoo(tqdata)
View(tqdata_df)
tqdata_df = tqdata_df[,-9]
write.csv(tqdata, "tqdata1.csv")
write.csv(tqdata, "tqdata1.csv")
write.csv(tqdata_df, "tqdata1.csv")
read.csv.zoo("tqdatacoca")
stamps = read.csv.zoo("tqdatacoca")
stamps
write.csv(stamps, "stamps.csv")
read.zoo("tedatacoca")
read.zoo("tedatacoca.zoo")
stamps
fortify.zoo(stamps)
stamps = fortify.zoo(stamps)
write.csv(stamps, "stamps1.csv")
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
library(highfrequency)
library(xts)
Sys.setenv(TZ = "GMT")
options(digits.secs=3)
coke_raw <- read.csv("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/FE570KO03012022.csv", header=T)
View(coke_raw)
class(coke_raw)
names(coke_raw)
summary(coke_raw)
length(coke_raw$Price) #864,733 entries (trades+quotes)
head(coke_raw)
tdata <- subset(coke_raw, Type=="Trade") #15,245 observations
qdata <- subset(coke_raw, Type=="Quote") #849,488 observations
View(tdata)
length(tdata$Price) #15,245 trades
length(qdata$Price) #849,488 quotes
tdata.small <- data.frame(TIME = gsub("T", " ", tdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
PRICE = tdata$Price,
SIZE = tdata$Volume,
EX = tdata$Ex.Cntrb.ID)
View(tdata.small)
length(tdata.small$PRICE)
head(tdata.small,10)
qdata.small <- data.frame(TIME = gsub("T", " ", qdata$Date.Time, perl=TRUE),
SYMBOL = "KO",
BID = qdata$Bid.Price,
BIDSIZ = qdata$Bid.Size,
OFR = qdata$Ask.Price,
OFRSIZ = qdata$Ask.Size)
head(qdata.small)
View(qdata.small)
View(tdata.small)
qdata.small
qdata.small[1,1]
qdata.small[,1]
tdata.xts <- xts(tdata.small[,-1],
order.by=as.POSIXct(tdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
qdata.xts <- xts(qdata.small[,-1],
order.by=as.POSIXct(qdata.small[,1], format = "%Y-%m-%d %H:%M:%OS"))
mergeTradesSameTimestamp(tdata.xts)
tdata.xts
#matching trade and quote data
tqdata = matchTradesQuotes(tdata.xts, qdata.xts)
View(tqdata)
View(tqdata)
tqdata_df = fortify.zoo(tqdata)
tqdata_df = tqdata_df[,-9]
View(tqdata_df)
tqdata_df[,1]
write.csv(tqdata_df, "tqdata2.csv")
write.xlsx(tqdata_df, "tqdata2.xlsx")
write.zoo(tqdata_df, "tqdata3.csv")
write.table(tqdata_df, "tqdata3.csv", sep=",")
save.image("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Final Proj/tqdata_workspace.RData")
library("writexl")
install.packages("writexl")
library("writexl")
write_xlsx(tqdata_df, "tqdata4.xlsx")
View(tqdata_df)
