####### Save for future use
sharpe_ratios <- data.frame(as.matrix(0,2,2))
sharpe_ratios$as.matrix.0..2..2.[1] <- (mean(QQQ_data$port_ret[-1]))/sd(QQQ_data$port_ret[-1])
sharpe_ratios$as.matrix.0..2..3.[1] <-(mean(QQQ_data$`Daily Return`[-1]))/sd(QQQ_data$`Daily Return`[-1])
colnames(sharpe_ratios) <- c("Portfolio Daily Sharpe", "QQQ Daily Sharpe")
sharpe_ratios_annualized <- sharpe_ratios *sqrt(252)
colnames(sharpe_ratios_annualized) <- c("Portfolio Sharpe Annualized", "QQQ Sharpe Annualized")
sharpe_ratios_annualized[1,]
library(ggplot2)
library(reshape2)
final_result <- melt(final_result, id = "date")
ggplot(final_result, aes(x = final_result$date, y = final_result$value, color = variable, group = final_result$variable))+geom_line()+ scale_x_date(date_minor_breaks = "1 day") + labs(color = "Portfolio") + xlab("Date") + ylab("Portfolio Value") + ggtitle("RandomForest Model - Technical Variables vs. Change in VXN 20-Day EMA")
model_1 <- Macro_score_model
model_2 <- TA_score_model
model_3 <- ML_MA_Model
model_4 <- ML_Model
cumulative <- ML_MA_Model
cumulative$Label <- "cumulative"
# Make sure no date discrepancy bettwen macro model and ta model dates
mylist <- c()
for (i in 1:nrow(model_1)){
if (sum(model_1$Date[i] == cumulative$Date) == 0){
mylist <- c(mylist, i)
}
}
model_1 <- model_1[-mylist,]
mylist <- c()
for (i in 1:nrow(cumulative)){
if (sum(cumulative$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
cumulative <- cumulative[-mylist,]
mylist <- c()
for (i in 1:nrow(model_2)){
if (sum(model_2$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_2 <- model_2[-mylist,]
mylist <- c()
for (i in 1:nrow(model_3)){
if (sum(model_3$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_3 <- model_3[-mylist,]
mylist <- c()
for (i in 1:nrow(model_4)){
if (sum(model_4$Date[i] == model_1$Date) == 0){
mylist <- c(mylist, i)
}
}
model_4 <- model_4[-mylist,]
nrow(model_1)
nrow(model_2)
nrow(model_3)
nrow(model_4)
nrow(cumulative)
# sum the various model scores
cumulative$Value <- model_1$Value + model_2$Value + model_3$Value + model_4$Value
# Re-pull QQQ and VXX Data if needed
tickers <- c("QQQ", "^VXN")
start.date2 = model_3$Date[1] # start and end dates from TA model
end.date2 = model_3$Date[nrow(model_3)]
# start.date2 = "2019-01-07"
# end.date2 = "2020-01-21"
#
# start.date2 = "2020-01-07"
# end.date2 = "2021-01-25"
#
# start.date2 = "2021-01-07"
# end.date2 = "2022-03-25"
l.out <- BatchGetSymbols(tickers = tickers,
first.date = start.date2,
last.date = as.Date(end.date2)+1, do.cache=FALSE, be.quiet = TRUE)
price_data = data.frame(l.out$df.tickers$price.adjusted,l.out$df.tickers$ret.adjusted.prices, l.out$df.tickers$ref.date, l.out$df.tickers$ticker)
colnames(price_data) <- c("Value", "Daily Return", "Date", "Label")
cumulative <- cumulative[(which(cumulative$Date == start.date2)):(which(cumulative$Date == end.date2)),]
# Build the portfolio
mylist <- c()
for (i in 1:nrow(price_data)){
if (sum(price_data$Date[i] == cumulative$Date) == 0){
mylist <- c(mylist, i)
}
}
price_data <- price_data[-mylist,]
portfolio <- cumulative
portfolio$Label <- "portfolio"
portfolio$Value <- 100
for(i in 2:nrow(portfolio)){
if (cumulative$Value[i-1] == 0){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+price_data$`Daily Return`[i]* 1.5)
} else if (cumulative$Value[i-1] == 1){
portfolio$Value[i] <- portfolio$Value[i-1]  * (1+(price_data$`Daily Return`[i] * 1))
} else if (cumulative$Value[i-1] == 2){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * 1))
} else if (cumulative$Value[i-1] == 3){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * .75))
} else if (cumulative$Value[i-1] == 4){
portfolio$Value[i] <- portfolio$Value[i-1] * (1+(price_data$`Daily Return`[i] * -.5))
}
}
portfolio[nrow(portfolio),]
# Set up QQQ portfolio
QQQ_portfolio <- portfolio
QQQ_portfolio$Value <- 100
for(i in 2:nrow(QQQ_portfolio)){
QQQ_portfolio$Value[i] <- QQQ_portfolio$Value[i-1] * (1+price_data$`Daily Return`[i])
}
QQQ_portfolio$Label <- "QQQ Portfolio"
# Rebind everything
price_data <- price_data[,-2]
cumulative$Value <- cumulative$Value * 100 #* 10 + round(min(portfolio$Value),digits = 10)# use this to scale if using smaller time periods
cumulative$Label <- "Risk Signal"
port_comp <- rbind(QQQ_portfolio, portfolio , cumulative)
ggplot(port_comp, aes(x = port_comp$Date, y = port_comp$Value, color = port_comp$Label, group = port_comp$Label))+geom_line()+ggtitle("Cumulative Model - Market Exposure - 0 signals 150%, 4 signals -50%, else 100%") + theme(plot.title = element_text(size=10))
# Evaluate sharpe
sharpe_ratios <- data.frame(matrix(0,2,2))
sharpe_ratios$X1[1] <- mean(Delt(portfolio$Value)[-1])/sd(Delt(portfolio$Value)[-1])
sharpe_ratios$X2[1] <- mean(Delt(QQQ_portfolio$Value)[-1])/sd(Delt(QQQ_portfolio$Value)[-1])
colnames(sharpe_ratios) <- c("Portfolio Daily Sharpe", "QQQ Daily Sharpe")
sharpe_ratios_annualized <- sharpe_ratios *sqrt(252)
colnames(sharpe_ratios_annualized) <- c("Portfolio Sharpe Annualized", "QQQ Sharpe Annualized")
sharpe_ratios_annualized[1,]
setwd("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Hw4")
load("C:/Users/sidiy/Documents/GitHub/SIT-Courses/FE 570 Market Microstructure/Hw4/taqdata_JPM_20210113_ESTMktHrs.RData")
load("taqdata_JPM_20210113_ESTMktHrs.RData")
tqdataMktHrs
load("taqdata_JPM_20210113_ESTMktHrs.RData")
library(xts)
library(highfrequency)
#   analysis on real data
Sys.setenv(TZ = "EST")  # work in East Coast Time Zone
options(digits.secs=3)
load("taqdata_JPM_20210113_ESTMktHrs.RData")
# loads a xts file called tqdataMktHrs
tqdata <- tqdataMktHrs
head(tqdata)
tail(tqdata)
length(tqdata$SIZE) #129,391 trades on all exchanges
tqdata <- tqdata[tqdata$EX=='ADF']
length(tqdata$SIZE)
asks <- as.numeric(tqdata$OFR)
bids <- as.numeric(tqdata$BID)
mids <- 0.5*bids + 0.5*asks
pmin = min(as.numeric(tqdata$PRICE))
pmax = max(as.numeric(tqdata$PRICE))
plot(as.numeric(tqdata$PRICE),col="red", type="l", ylab="Trade price",
xlab="Trade #", main="Trade price (9:30-16:00)", ylim=c(pmin-0.1,pmax+0.1))
lines(mids, type="l", col="blue")
plot(as.numeric(tqdata$SIZE),col="red", type="l",
ylab="Trade size",
xlab="Trade #", main="Trade volume", ylim=c(0,100000))
pr <- as.numeric(tqdata$PRICE)
dpr <- diff(pr)  # Delta price
acpr <- acf(dpr, lag.max=20, type="correlation",
plot=TRUE, main="Autocorrelation")
plot(acpr, col="red", lag.max=20,
main="Autocorrelation of price changes")
covpr <- acf(dpr, lag.max=20, type="covariance",
main="covariance of price changes")
gamma0 <- sd(dpr)^2
print(gamma0)
gamma0alt <- covpr$acf[1]
print(gamma0alt)
gamma1 <- covpr$acf[2]
print(gamma1)
cparam <- sqrt(-covpr$acf[2])
print(cparam)
sig2u <- gamma0 + 2* gamma1
sigu <- sqrt(sig2u)
print(sigu)
td <- getTradeDirection(tqdata)
plot(td[1:50],main="trade signs (XXX)",type="b",col="blue")
td_ac <- acf(td, main="NA", lag.max=20,plot=FALSE)
plot(td_ac,main="trade signs autocorrelation (JPM)", col="red")
deps <- diff(td)
mids <- (as.numeric(tqdata$OFR) + as.numeric(tqdata$BID))/2
dm <- diff(mids)
(fit.lm <- lm(dpr ~ dm + deps))
summary(fit.lm)
fit.lm$coeff[3]
###########################################
# plot the trades in 1 min (118 trades)
min1 <- '2021-01-13 15:00:00::2021-01-13 15:01:00'
summary(as.data.frame(tqdata$EX[min1]))
length(tqdata$EX[min1])
pmin <- min(as.numeric(tqdata$BID[min1]))
pmax <- max(as.numeric(tqdata$OFR[min1]))
prange <- c(pmin- 0.01, pmax+0.02)
plot(as.numeric(tqdata$BID[min1]), type="n",
ylim = prange, main = "10:07-08 (ADF)",
ylab="price",xlab="Trade index")
lines(as.numeric(tqdata$BID[min1]), type="l", col="blue")
lines(as.numeric(tqdata$OFR[min1]), type="l", col="red")
points(as.numeric(tqdata$PRICE[min1]), col="black", pch=20)
View(tqdata)
library(xts)
library(highfrequency)
#   analysis on real data
Sys.setenv(TZ = "EST")  # work in East Coast Time Zone
options(digits.secs=3)
load("taqdata_JPM_20210113_ESTMktHrs.RData")
# loads a xts file called tqdataMktHrs
tqdata <- tqdataMktHrs
head(tqdata)
tail(tqdata)
length(tqdata$SIZE) #129,391 trades on all exchanges
tqdata <- tqdata[tqdata$EX=='ADF']
length(tqdata$SIZE) #34,844 trades on ADF exchange
# Plot prices
asks <- as.numeric(tqdata$OFR)
bids <- as.numeric(tqdata$BID)
mids <- 0.5*bids + 0.5*asks
pmin = min(as.numeric(tqdata$PRICE))
pmax = max(as.numeric(tqdata$PRICE))
plot(as.numeric(tqdata$PRICE),col="red", type="l", ylab="Trade price",
xlab="Trade #", main="Trade price (9:30-16:00)", ylim=c(pmin-0.1,pmax+0.1))
lines(mids, type="l", col="blue")
plot(as.numeric(tqdata$SIZE),col="red", type="l",
ylab="Trade size",
xlab="Trade #", main="Trade volume", ylim=c(0,100000))
pr <- as.numeric(tqdata$PRICE)
dpr <- diff(pr)  # Delta price
acpr <- acf(dpr, lag.max=20, type="correlation",
plot=TRUE, main="Autocorrelation")
# acf: both autocorrelation and autocovariance
plot(acpr, col="red", lag.max=20,
main="Autocorrelation of price changes")
# Roll estimate of bid-ask spread
covpr <- acf(dpr, lag.max=20, type="covariance",
main="covariance of price changes")
gamma0 <- sd(dpr)^2
print(gamma0)
gamma0alt <- covpr$acf[1]
print(gamma0alt)
gamma1 <- covpr$acf[2]
print(gamma1)
cparam <- sqrt(-covpr$acf[2])
print(cparam)
sig2u <- gamma0 + 2* gamma1
sigu <- sqrt(sig2u)
print(sigu)
# get Trade direction using Lee, Ready
td <- getTradeDirection(tqdata)
plot(td[1:50],main="trade signs (XXX)",type="b",col="blue")
td_ac <- acf(td, main="NA", lag.max=20,plot=FALSE)
plot(td_ac,main="trade signs autocorrelation (JPM)", col="red")
td
td_ac
# improved Roll model estimation, relaxing the assumption of independence of trades
deps <- diff(td)
mids <- (as.numeric(tqdata$OFR) + as.numeric(tqdata$BID))/2
dm <- diff(mids)
(fit.lm <- lm(dpr ~ dm + deps))
summary(fit.lm)
fit.lm$coeff[3]
deps
head(td)
dm
head(dm)
td
tqdata$SIZE * td
as.numeric(tqdata$SIZE) * td
library(xts)
library(highfrequency)
#   analysis on real data
Sys.setenv(TZ = "EST")  # work in East Coast Time Zone
options(digits.secs=3)
load("taqdata_JPM_20210113_ESTMktHrs.RData")
# loads a xts file called tqdataMktHrs
tqdata <- tqdataMktHrs
head(tqdata)
tail(tqdata)
length(tqdata$SIZE) #129,391 trades on all exchanges
tqdata <- tqdata[tqdata$EX=='ADF']
length(tqdata$SIZE) #34,844 trades on ADF exchange
#####################################################
# Plot prices
asks <- as.numeric(tqdata$OFR)
bids <- as.numeric(tqdata$BID)
mids <- 0.5*bids + 0.5*asks
pmin = min(as.numeric(tqdata$PRICE))
pmax = max(as.numeric(tqdata$PRICE))
plot(as.numeric(tqdata$PRICE),col="red", type="l", ylab="Trade price",
xlab="Trade #", main="Trade price (9:30-16:00)", ylim=c(pmin-0.1,pmax+0.1))
lines(mids, type="l", col="blue")
plot(as.numeric(tqdata$SIZE),col="red", type="l",
ylab="Trade size",
xlab="Trade #", main="Trade volume", ylim=c(0,100000))
library(xts)
library(highfrequency)
#   analysis on real data
Sys.setenv(TZ = "EST")  # work in East Coast Time Zone
options(digits.secs=3)
load("taqdata_JPM_20210113_ESTMktHrs.RData")
# loads a xts file called tqdataMktHrs
tqdata <- tqdataMktHrs
head(tqdata)
tail(tqdata)
length(tqdata$SIZE) #129,391 trades on all exchanges
tqdata <- tqdata[tqdata$EX=='ADF']
length(tqdata$SIZE) #34,844 trades on ADF exchange
#####################################################
# Plot prices
asks <- as.numeric(tqdata$OFR)
bids <- as.numeric(tqdata$BID)
mids <- 0.5*bids + 0.5*asks
pmin = min(as.numeric(tqdata$PRICE))
pmax = max(as.numeric(tqdata$PRICE))
plot(as.numeric(tqdata$PRICE),col="red", type="l", ylab="Trade price",
xlab="Trade #", main="Trade price (9:30-16:00)", ylim=c(pmin-0.1,pmax+0.1))
lines(mids, type="l", col="blue")
plot(as.numeric(tqdata$SIZE),col="red", type="l",
ylab="Trade size",
xlab="Trade #", main="Trade volume", ylim=c(0,100000))
###########################################
# calibrate the Roll model on the real data
###########################################
pr <- as.numeric(tqdata$PRICE)
dpr <- diff(pr)  # Delta price
acpr <- acf(dpr, lag.max=20, type="correlation",
plot=TRUE, main="Autocorrelation")
# acf: both autocorrelation and autocovariance
plot(acpr, col="red", lag.max=20,
main="Autocorrelation of price changes")
# Roll estimate of bid-ask spread
covpr <- acf(dpr, lag.max=20, type="covariance",
main="covariance of price changes")
gamma0 <- sd(dpr)^2
print(gamma0)
gamma0alt <- covpr$acf[1]
print(gamma0alt)
gamma1 <- covpr$acf[2]
print(gamma1)
cparam <- sqrt(-covpr$acf[2])
print(cparam)
sig2u <- gamma0 + 2* gamma1
sigu <- sqrt(sig2u)
print(sigu)
##############################################################
# get Trade direction using Lee, Ready
td <- getTradeDirection(tqdata)
plot(td[1:50],main="trade signs (XXX)",type="b",col="blue")
td_ac <- acf(td, main="NA", lag.max=20,plot=FALSE)
plot(td_ac,main="trade signs autocorrelation (JPM)", col="red")
#deps <- diff(td)
mids <- (as.numeric(tqdata$OFR) + as.numeric(tqdata$BID))/2
dm <- diff(mids)
xt = as.numeric(tqdata$SIZE) * td
xt
dm
length(dm)
length(xt)
xt = xt[-length(xt)]
length(xt)
fit.lm = lm(dm ~ xt)
#(fit.lm <- lm(dpr ~ dm + deps))
summary(fit.lm)
fit.lm$coeff[3]
#(fit.lm <- lm(dpr ~ dm + deps))
summary(fit.lm)
# plot the trades in 1 min (118 trades)
min1 <- '2021-01-13 15:00:00::2021-01-13 15:01:00'
summary(as.data.frame(tqdata$EX[min1]))
length(tqdata$EX[min1])
pmin <- min(as.numeric(tqdata$BID[min1]))
pmax <- max(as.numeric(tqdata$OFR[min1]))
prange <- c(pmin- 0.01, pmax+0.02)
plot(as.numeric(tqdata$BID[min1]), type="n",
ylim = prange, main = "10:07-08 (ADF)",
ylab="price",xlab="Trade index")
lines(as.numeric(tqdata$BID[min1]), type="l", col="blue")
lines(as.numeric(tqdata$OFR[min1]), type="l", col="red")
points(as.numeric(tqdata$PRICE[min1]), col="black", pch=20)
summary(fit.lm)
fit.lm$coefficients
fit.lm$coefficients[2]
fit.lm$coefficients[2] + 1
fit.lm$coefficients[2]
lambda = fit.lm$coefficients[2]
rhs = pr - mids - lambda*xt # right hands side
lambda*xt
length(pr)
length(mids)
length(xt)
xt = as.numeric(tqdata$SIZE) * td
rhs = pr - mids - lambda*xt # right hands side
fit.lm2 = lm(rhs ~ td)
summary(fit.lm2)
c = fit.lm2$coefficients[2]
############################################
# charts n stuff
plot(xt[-length(xt)], dm)
View(tqdataMktHrs)
tqdata[1]
tqdata[1000]
tqdata[7000]
tqdata[5000]
tqdata[4000]
tqdata[4500]
tqdata[4300]
tqdata[4150]
tqdata[4180]
tqdata[4190]
tqdata[4200]
tqdata[4250]
tqdata[4280]
tqdata[4290]
tqdata[4285]
tqdata[4284]
tqdata[4283]
tqdata[4282]
tqdata[4281]
tqdata[4280]
tqdata[4281]
tqdata[10000]
tqdata[40000]
tqdata[30000]
tqdata[20000]
tqdata[25000]
tqdata[24000]
tqdata[24500]
tqdata[24400]
library(xts)
library(highfrequency)
#   analysis on real data
Sys.setenv(TZ = "EST")  # work in East Coast Time Zone
options(digits.secs=3)
load("taqdata_JPM_20210113_ESTMktHrs.RData")
# loads a xts file called tqdataMktHrs
tqdata <- tqdataMktHrs
tqdata <- tqdata[4281:24400]
head(tqdata)
tail(tqdata)
length(tqdata$SIZE) #129,391 trades on all exchanges
tqdata <- tqdata[tqdata$EX=='ADF']
length(tqdata$SIZE) #34,844 trades on ADF exchange
# Plot prices
asks <- as.numeric(tqdata$OFR)
bids <- as.numeric(tqdata$BID)
mids <- 0.5*bids + 0.5*asks
pmin = min(as.numeric(tqdata$PRICE))
pmax = max(as.numeric(tqdata$PRICE))
plot(as.numeric(tqdata$PRICE),col="red", type="l", ylab="Trade price",
xlab="Trade #", main="Trade price (9:30-16:00)", ylim=c(pmin-0.1,pmax+0.1))
lines(mids, type="l", col="blue")
plot(as.numeric(tqdata$SIZE),col="red", type="l",
ylab="Trade size",
xlab="Trade #", main="Trade volume", ylim=c(0,100000))
pr <- as.numeric(tqdata$PRICE)
dpr <- diff(pr)  # Delta price
acpr <- acf(dpr, lag.max=20, type="correlation",
plot=TRUE, main="Autocorrelation")
# acf: both autocorrelation and autocovariance
plot(acpr, col="red", lag.max=20,
main="Autocorrelation of price changes")
# Roll estimate of bid-ask spread
covpr <- acf(dpr, lag.max=20, type="covariance",
main="covariance of price changes")
gamma0 <- sd(dpr)^2
print(gamma0)
gamma0alt <- covpr$acf[1]
print(gamma0alt)
gamma1 <- covpr$acf[2]
print(gamma1)
cparam <- sqrt(-covpr$acf[2])
print(cparam)
sig2u <- gamma0 + 2* gamma1
sigu <- sqrt(sig2u)
print(sigu)
##############################################################
# get Trade direction using Lee, Ready
td <- getTradeDirection(tqdata)
plot(td[1:50],main="trade signs (XXX)",type="b",col="blue")
td_ac <- acf(td, main="NA", lag.max=20,plot=FALSE)
plot(td_ac,main="trade signs autocorrelation (JPM)", col="red")
#deps <- diff(td)
mids <- (as.numeric(tqdata$OFR) + as.numeric(tqdata$BID))/2
dm <- diff(mids)
xt = as.numeric(tqdata$SIZE) * td
xt = xt[-length(xt)]
fit.lm = lm(dm ~ xt)
#(fit.lm <- lm(dpr ~ dm + deps))
summary(fit.lm)
lambda = fit.lm$coefficients[2]
xt = as.numeric(tqdata$SIZE) * td
lambda
fit.lm$coefficients[1]
# plot the trades in 1 min (118 trades)
min1 <- '2021-01-13 15:00:00::2021-01-13 15:01:00'
summary(as.data.frame(tqdata$EX[min1]))
length(tqdata$EX[min1])
pmin <- min(as.numeric(tqdata$BID[min1]))
pmax <- max(as.numeric(tqdata$OFR[min1]))
prange <- c(pmin- 0.01, pmax+0.02)
plot(as.numeric(tqdata$BID[min1]), type="n",
ylim = prange, main = "10:07-08 (ADF)",
ylab="price",xlab="Trade index")
lines(as.numeric(tqdata$BID[min1]), type="l", col="blue")
lines(as.numeric(tqdata$OFR[min1]), type="l", col="red")
points(as.numeric(tqdata$PRICE[min1]), col="black", pch=20)
# determine c
rhs = pr - mids - lambda*xt # right hands side
fit.lm2 = lm(rhs ~ td)
summary(fit.lm2)
c = fit.lm2$coefficients[2]
c
############################################
# charts n stuff
plot(xt[-length(xt)], dm)
